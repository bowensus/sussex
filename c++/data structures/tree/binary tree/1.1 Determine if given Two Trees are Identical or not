#include <iostream>
using namespace std;

struct Node
{
    int item;
    Node* left;
    Node* right;
    Node(int key){
        item = key;
        left = nullptr;
        right = nullptr;
    }
};

bool identicalTrees(Node* p, Node* q)
{
    if(p == nullptr && q == nullptr){
        return true;
    }

    return p->item == q->item
    && identicalTrees(p->left, q->left)
    && identicalTrees(p->right, q->right);

}

int main()
{
    Node* root1 =  new Node(1);
    root1->left = new Node(2);
    root1->right = new Node(3);
    root1->left->left = new Node(4);

    Node* root2 = new Node(1);
    root2->left = new Node(2);
    root2->right = new Node(3);
    root2->left->left = new Node(4);

    if(identicalTrees(root1, root2)){
        cout << "identicalTrees" << endl;
    }else{
        cout << "Not identicalTrees" << endl;
    }

    return 0;
}
