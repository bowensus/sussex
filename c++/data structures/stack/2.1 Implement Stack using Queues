#include <iostream>
#include <queue>
using namespace std;

struct Stack
{
    queue<int> queue1;
    queue<int> queue2;

    void push(int item);
    bool isEmpty();
    int pop();
};

void Stack :: push(int item)
{
    queue2.push(item);
    while(!queue1.empty()){
        int current = queue1.front();
        queue1.pop();
        queue2.push(current);
    }
    while(!queue2.empty()){
        int current = queue2.front();
        queue2.pop();
        queue1.push(current);
    }
}

bool Stack :: isEmpty()
{
    return queue1.empty();
}

int Stack :: pop()
{
    int item = queue1.front();
    queue1.pop();
    return item;
}

int main()
{
    Stack stack;
    stack.push(1);
    stack.push(2);
    stack.push(3);

    for(int i=0; i<3; i++){
        cout << stack.pop() << ' ';
    }
    if(stack.isEmpty()) cout << '\n' << "empty";
    else cout << '\n' << "not empty";

    return 0;
}
