import unittest

class TextBook:

    def __init__(self):
        self.contact_dict = dict()

    def setup_contact(self):
        self.contact_dict = {'jane': ('jane@acme.com', 'manager', 1546),
                             'rod': ('rod@acme.com', 'programmer', 8724),
                             'freddy': ('freddy@acme.com', 'support', 8524)}

    def add_new_contact(self, name, email, position, extension):
        if name not in self.contact_dict.keys():
            self.contact_dict.update({name: (email, position, extension)})
            return True
        else:
            return False

    def list_contact(self):
        for name in self.contact_dict.keys():
            print("{:s}: email: {:s}, position: {:s}, extension: {:d}".
                  format(name, self.contact_dict[name][0],
                         self.contact_dict[name][1], self.contact_dict[name][2]))

    def get_number(self):
        return len(self.contact_dict.keys())

    def update_email(self, name, new_email):
        if name in self.contact_dict.keys():
            self.contact_dict.update({name:(new_email, self.contact_dict[name][1],
                                            self.contact_dict[name][2])})

    def get_email(self, name):
        if name in self.contact_dict.keys():
            return self.contact_dict[name][1]

    def search_by_name(self, name):
        if name in self.contact_dict.keys():
            return self.contact_dict[name]
        else:
            print("Sorry, {:s} is not in the contacts list.". format(name))

    def print_by_keys(self):
        for name in self.contact_dict.keys():
            print(name)

class TestTextBook(unittest.TestCase):

    def setUp(self):
        self.item1 = TextBook()
        self.item1.setup_contact()

    def tearDown(self):
        del self.item1

    def test(self):
        self.assertTrue(self.item1.add_new_contact("william", "will@acme.com", "junior", 1234))
        self.assertEqual(self.item1.get_number(), 4)

        self.assertFalse(self.item1.add_new_contact("william", "will@acme.com", "junior", 1234))
        self.assertEqual(self.item1.get_number(), 4)


def main():
    test_01 = TestTextBook()
    test_01.setUp()
    test_01.test()
    test_01.tearDown()

if __name__ == "__main__":
    main()
